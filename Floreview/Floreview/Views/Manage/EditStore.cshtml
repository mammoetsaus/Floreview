@model Floreview.ViewModels.CMS.StoreVM

@{
    var latitude = Model.Company.Coordinates.Latitude.ToString().Replace(',', '.');
    var longitude = Model.Company.Coordinates.Longitude.ToString().Replace(',', '.');
    var point = latitude + "," + longitude;
}

<header class="cms-header">
    <nav>
        <ul class="content-container">
            <li>
                @Html.ActionLink("Home", "Index", "Home")
            </li>
            <li>
                @Html.ActionLink("Blog", "Index", "Blog")
            </li>
            <li>
                @Html.ActionLink("Floreview", "Index", "Home")
            </li>
            <li>
                @Html.ActionLink("Contact", "Index", "Home")
            </li>
            <li class="nav-login">
                @Html.Partial("_LoginPartial")
            </li>
        </ul>
    </nav>

    @if (User.Identity.IsAuthenticated && User.IsInRole("Admin"))
    {
        <div id="cms-menu">
            <ul class="content-container">
                <li>
                    @Html.ActionLink("Winkels", "Store", "Manage")
                </li>
            </ul>
        </div>
    }
</header>

@using (Html.BeginForm("EditStore", "Manage", FormMethod.Post, new { @id = "form-add-store", @class = "content-container", enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken();
    @Html.ValidationSummary(true);

    <section class="form-add-store-part">
        <h2>Winkel</h2>

        @Html.TextBoxFor(model => model.Company.Name, new { @placeholder = "Naam", @autocomplete = "off", @value = Model.Company.Name })
        @Html.ValidationMessageFor(model => model.Company.Name)

        @Html.TextAreaFor(model => model.Company.DescriptionShort, new { @placeholder = "Korte beschrijving", @value = Model.Company.DescriptionShort })
        @Html.ValidationMessageFor(model => Model.Company.DescriptionShort)

        @Html.TextAreaFor(model => model.Company.DescriptionLong, new { @placeholder = "Lange beschrijving", @value = Model.Company.DescriptionLong })
        @Html.ValidationMessageFor(model => model.Company.DescriptionLong)

        @Html.TextBoxFor(model => model.Company.Facebook, new { @placeholder = "Facebook", @autocomplete = "off", @value = Model.Company.Facebook })
        @Html.ValidationMessageFor(model => model.Company.Facebook)

        @Html.TextBoxFor(model => model.Company.Website, new { @placeholder = "Website", @autocomplete = "off", @value = Model.Company.Website })
        @Html.ValidationMessageFor(model => model.Company.Website)

        @Html.HiddenFor(model => model.Company.Avatar)
        <input id="add-store-avatar" type="file" name="CompanyAvatar" accept="image/*" />
        <img id="add-store-avatar-preview" class="image-previews" src="@Model.Company.Avatar" alt="Store avatar preview" />
    </section>

    <section class="form-add-store-part">
        <h2>Florist</h2>

        @Html.TextBoxFor(model => model.Company.Florist.FirstName, new { @placeholder = "Voornaam", @autocomplete = "off", @value = Model.Company.Florist.FirstName })
        @Html.ValidationMessageFor(model => model.Company.Florist.FirstName)

        @Html.TextBoxFor(model => model.Company.Florist.LastName, new { @placeholder = "Achternaam", @autocomplete = "off", @value = Model.Company.Florist.LastName })
        @Html.ValidationMessageFor(model => model.Company.Florist.LastName)

        @Html.TextBoxFor(model => model.Company.Florist.Phone, new { @placeholder = "Telefoon", @autocomplete = "off", @value = Model.Company.Florist.Phone })
        @Html.ValidationMessageFor(model => model.Company.Florist.Phone)

        @Html.TextBoxFor(model => model.Company.Florist.Cellphone, new { @placeholder = "GSM", @autocomplete = "off", @value = Model.Company.Florist.Cellphone })
        @Html.ValidationMessageFor(model => model.Company.Florist.Cellphone)

        @Html.TextBoxFor(model => model.Company.Email, new { @placeholder = "E-mail", @autocomplete = "off", @value = Model.Company.Email })
        @Html.ValidationMessageFor(model => model.Company.Email)

        @Html.HiddenFor(model => model.Company.Florist.ImagePath)
        <input id="add-store-florist-avatar" type="file" name="FloristAvatar" accept="image/*" />
        <img id="add-store-avatar-florist-preview" class="image-previews" src="@Model.Company.Florist.ImagePath" alt="Profile avatar preview" />
    
        <input id="add-store-images" type="file" name="CompanyImages" accept="image/*" multiple="multiple" />

        <ul id="store-images-list"></ul>
    </section>

    <section class="form-add-store-part">
        <h2>Plaats</h2>

        @Html.TextBoxFor(model => model.Company.Location.City, new { @placeholder = "Gemeente", @id = "add-store-city", @list = "lstCities", @autocomplete = "off", @value = Model.Company.Location.City })
        @Html.ValidationMessageFor(model => model.Company.Location.City)

        @Html.TextBoxFor(model => model.Company.Address, new { @placeholder = "Adres", @id = "add-store-address", @autocomplete = "off", @value = Model.Company.Address })
        @Html.ValidationMessageFor(model => model.Company.Address)

        @Html.Hidden("LatitudeRAW", latitude, new { @id = "hidden-latitude" })
        @Html.Hidden("LongitudeRAW", longitude, new { @id = "hidden-longitude" })
        @Html.HiddenFor(model => model.Company.ID)

        <div id="add-store-map-canvas"></div>

        <input type="submit" value="Opslaan" />
    </section>
}

<datalist id="lstCities">
    <select>
        <option id="0" value="Prefill item"></option>
    </select>
</datalist>

<script>
    $(document).ready(function () {
        initGMaps();
    });

    function initGMaps() {
        geocoder = new google.maps.Geocoder();
        var myLatLng = new google.maps.LatLng(@latitude@Html.Raw(",")@longitude);
        var mapOptions = {
            zoom: 14,
            center: myLatLng
        }
        map = new google.maps.Map(document.getElementById("add-store-map-canvas"), mapOptions);

        marker = new google.maps.Marker({
            position: myLatLng,
            map: map
        });
    }
</script>